// -*- mode: javascript -*-
require ("noscript");

register_user_stylesheet(
    "data:text/css," +
        escape(
            "@namespace url(\"http://www.w3.org/1999/xhtml\");\n" +
                "span.__conkeror_hint {\n"+
                "color: black !important;\n"+
                "background-color: wheat !important;\n"+
                "font-family: pt serif !important;\n"+
                "border-style: dotted !important;"+
                "border-width: 1px !important;"+
                "font-size: 14px !important;\n"+
                "line-height: 18px !important;\n"+
                "}\n"
        ));

hint_digits="abcdefghijklmnopqrstuvwxyz";
session_pref("xpinstall.whitelist.required", false);
homepage = "about:blank";

// the default page for new buffers.

// load urls from the command line in new buffers instead
// of new windows.
url_remoting_fn = load_url_in_new_buffer;
url_completion_use_history = true;
minibuffer_auto_complete_default = true;

// load download buffers in the background in the current
// window, instead of in new windows.
download_buffer_automatic_open_target = OPEN_NEW_BUFFER_BACKGROUND;
hints_minibuffer_annotation_mode(true);

// default directory for downloads and shell commands.
cwd = get_home_directory();
cwd.append("x");
cwd.append("inc");
external_content_handlers.set("application/pdf", "llpp");
external_content_handlers.set("video/*", "yt");
// use emacs as external editor.
editor_shell_command = "emacsclient";
// view source in your editor.
view_source_use_external_editor = true;
// let xkcd-mode put the funny alt text into the page.
xkcd_add_title = true;

require("new-tabs.js");
require("clicks-in-new-buffer.js");
require("page-modes/wikipedia.js");
require("index-webjump.js");
require("session.js");
require("block-content-focus-change.js");

// Some settings
session_auto_save_auto_load = "prompt";
url_remoting_fn = load_url_in_new_buffer;
view_source_use_external_editor = true
xkcd_add_title = true;
read_buffer_show_icons = true;
hints_display_url_panel = true;

// Webjump oneliners
define_webjump("archive.org", "http://www.archive.org/search.php?query=%s");
define_webjump("g", "http://www.bing.com/search?q=%s");
define_webjump("codesearch", "http://www.google.com/codesearch?q=%s");
define_webjump("cpan", "http://search.cpan.org/search?query=%s&mode=all");
define_webjump("cuil", "http://www.cuil.com/search?q=%s");
define_webjump("leo", "http://dict.leo.org/?lp=ende&lang=de&searchLoc=0&cmpType=relaxed&relink=on&sectHdr=off&spellToler=std&search=%s");
define_webjump("imdb", "http://bing.com/search?q=%s%20site:imdb.com");
define_webjump("kol", "http://kol.coldfront.net/thekolwiki/index.php/%s");
define_webjump("ohloh", "https://www.ohloh.net/p?query=%s");
define_webjump("scroogle",
               "https://ssl.scroogle.org/cgi-bin/nbbwssl.cgi?Gw=%s");
define_webjump("ixquick", "http://ixquick.com/do/metasearch.pl?query=%s");
define_webjump("symlink", "http://www.symlink.ch/search.pl?query=%s");
define_webjump("trans", "http://translate.google.com/translate_t#auto|en|%s");
define_webjump("twitter", "http://twitter.com/%s");
define_webjump("urban", "http://www.urbandictionary.com/define.php?term=%s");
define_webjump("wolframalpha", "http://www.wolframalpha.com/input/?i=%s");
define_webjump("youtube",
               "http://www.youtube.com/results?search_query=%s&search=Search");

// CVE
define_webjump("cve", "https://cve.mitre.org/cgi-bin/cvename.cgi?name=%s");

// JS Webjumps
define_webjump("longurl", "javascript:void(function(){if(typeof%20jQuery%20==%20'undefined'){var%20s=document.createElement('script');s.src='http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js';document.getElementsByTagName('head')[0].appendChild(s);}var%20l=document.createElement('script');l.src='http://www.longurlplease.com/js/longurlplease.js';document.getElementsByTagName('head')[0].appendChild(l);function%20runIfReady(){try{if($.longurlplease){%20clearInterval(interval);%20$.longurlplease();}}catch(e){}};%20var%20interval%20=%20window.setInterval(runIfReady,100);}())");

// Multiple Webjumps
define_gitweb_summary_webjump("gitweb-ko", "http://git.kernel.org");
define_gitweb_summary_webjump("gitweb-cz", "http://repo.or.cz/w");

// wikipedia_enable_didyoumean = false;
define_wikipedia_webjumps("en", "ru");

// Additional key bindings

define_key(content_buffer_normal_keymap, "M-j", "javascript-toggle");
define_key(content_buffer_normal_keymap, "s-j", "ns-toggle-temp");
//define_key(content_buffer_normal_keymap, "C-t", "find-url-new-buffer");
//define_key(content_buffer_normal_keymap, "C-t", "make-buffer");
define_key(content_buffer_normal_keymap, "C-w", "kill-current-buffer");
define_key(content_buffer_normal_keymap, "M-left", "back");
define_key(content_buffer_normal_keymap, "M-right", "forward");
define_key(content_buffer_normal_keymap, "back_space", "back");
define_key(content_buffer_normal_keymap, "d", "follow-new-buffer-background");
define_key(content_buffer_normal_keymap, "C-page_down", "buffer-next");
define_key(content_buffer_normal_keymap, "C-page_up", "buffer-previous");
define_key(content_buffer_normal_keymap, "home", "cmd_scrollTop");
define_key(content_buffer_normal_keymap, "C-0", "zoom-reset-text");
define_key(content_buffer_normal_keymap, "M-home", "home");
define_key(content_buffer_normal_keymap, "M-s", "ns-toggle-temp");
define_key(content_buffer_normal_keymap, "s-s", "toggle-stylesheets");
define_key(content_buffer_normal_keymap, "C-a", "cmd_selectAll");
define_key(content_buffer_normal_keymap, ",", "follow");
define_key(content_buffer_normal_keymap, ".", "copy");
define_key(content_buffer_normal_keymap, "f", "");

define_key(content_buffer_normal_keymap, "C-l", "find-url");

// selection searches
// selection searches
function create_selection_search(webjump, key) {
    interactive(webjump+"-selection-search",
                "Search " + webjump + " with selection contents",
                "find-url-new-buffer",
                $browser_object = function (I) {
                    return webjump + " " + I.buffer.top_frame.getSelection();});
    define_key(content_buffer_normal_keymap, key.toUpperCase(), webjump + "-selection-search");

    interactive("prompted-"+webjump+"-search", null,
                function (I) {
                    var term = yield I.minibuffer.read_url($prompt = "Search "+webjump+":",
                                                           $initial_value = webjump+" ",
                                                           $select = false);
                    browser_object_follow(I.buffer, FOLLOW_DEFAULT, term);
                });
    define_key(content_buffer_normal_keymap, key, "prompted-" + webjump + "-search");
}
// examples
create_selection_search("g","s");
create_selection_search("b","S");
create_selection_search("wikipedia","w");
create_selection_search("dictionary","D");
create_selection_search("youtube","u");
minibuffer_read_url_select_initial = false;


// Borrowed David Kettler
// http://www.mozdev.org/pipermail/conkeror/2008-September/001129.html
interactive("toggle-stylesheets",
            "Toggle whether conkeror uses style sheets (CSS) for the " +
            "current buffer.  It is sometimes useful to turn off style " +
            "sheets when the web site makes obnoxious choices.",
            function(I) {
  var s = I.buffer.document.styleSheets;
  for (var i = 0; i < s.length; i++)
    s[i].disabled = !s[i].disabled;
});

interactive("json",
            "js on",
            function(I) {
                session_pref ("javascript.enabled", true);
            });
interactive("jsoff",
            "js off",
            function(I) {
                session_pref ("javascript.enabled", false);
            });

// http://kmeleon.sourceforge.net/forum/posting.php?1,reply,121307,quote=1
interactive("javascript-toggle", "toggle javascript",
            function (I) {
              var p = "javascript.enabled";
              if (get_pref(p))
                session_pref(p, false);
                else session_pref(p, true);
            });

session_pref("image.animation_mode", "none");
session_pref("general.smoothScroll", "true");

require("user-agent-policy");

function define_switch_buffer_key (key, buf_num) {
    define_key(default_global_keymap, key,
               function (I) {
                   switch_to_buffer(I.window,
                                    I.window.buffers.get_buffer(buf_num));
               });
}
for (let i = 0; i < 10; ++i) {
    define_switch_buffer_key("M-"+String((i+1)%10), i);
}

//set the proxy server for this session only
proxy_server_default = "localhost";
proxy_port_default = 9050;

function set_proxy_session (window, server, port) {
    if (server == "N") {
       session_pref('network.proxy.type', 0); //direct connection
        window.minibuffer.message
        ("Direction connection to the internet enabled for this session");
    } else {
      if (server == "") server = proxy_server_default;
      if (port == "") port = proxy_port_default;

      // session_pref('network.proxy.ftp',    server);
      // session_pref('network.proxy.gopher', server);
      // session_pref('network.proxy.http',   server);
      session_pref('network.proxy.socks',  server);
      // session_pref('network.proxy.ssl',    server);

      // session_pref('network.proxy.ftp_port',    port);
      // session_pref('network.proxy.gopher_port', port);
      // session_pref('network.proxy.http_port',   port);
      session_pref('network.proxy.socks_port',  port);
      // session_pref('network.proxy.ssl_port',    port);

      session_pref('network.proxy.share_proxy_settings', true);
      session_pref('network.proxy.type', 1);

        window.minibuffer.message("All protocols using "+server
                                  +":"+port+" for this session");
    }
}

interactive("set-proxy-session",
    "set the proxy server for all protocols for this session only",
    function (I) {
        set_proxy_session(
            I.window,
            (yield I.minibuffer
             .read($prompt = "server ["+proxy_server_default+"] or N: ")),
            (yield I.minibuffer
             .read($prompt = "port ["+proxy_port_default+"]: ")));
    });
session_pref("layout.scrollbar.side", 3);
interactive ("hist",
             "hist",
             function (I) {
                 if (url_completion_sort_order != "visitcount_descending")
                     url_completion_sort_order = "visitcount_descending";
                 else
                     url_completion_sort_order = "history_ascending";
             }
            );


require("mode-line.js");
remove_hook("mode_line_hook", mode_line_adder(clock_widget));
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);
add_hook("mode_line_hook", mode_line_adder(loading_count_widget), true);
add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);
add_hook("mode_line_hook", mode_line_adder(zoom_widget));
//add_hook("mode_line_hook", mode_line_adder(downloads_status_widget));

session_pref ("browser.history_expire_days", 30);
session_pref ("browser.history_expire_days", 30);
session_pref ("gfx.downloadable_fonts.enabled", false);
